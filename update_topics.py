#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º
"""

import asyncio
import sys
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('.env.local')
load_dotenv()

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import Database
from topic_service import TopicService
from grok_service import GrokService

async def update_topics():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ —Ç–µ–º—ã"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–º...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
    db = Database()
    await db.init_db()
    
    grok_service = GrokService()
    topic_service = TopicService(db, grok_service)
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–µ —Ç–µ–º—ã
        print("üìö –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–µ —Ç–µ–º—ã –ø–æ –ò–ò...")
        await topic_service._generate_and_save_topics("general")
        print("‚úÖ –û–±—â–∏–µ —Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—ã 1C
        print("üè¢ –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–º—ã –ò–ò –¥–ª—è 1C Enterprise...")
        await topic_service._generate_and_save_topics("1c")
        print("‚úÖ –¢–µ–º—ã 1C –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
        
        print("üéâ –í—Å–µ —Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ–º: {e}")

if __name__ == "__main__":
    asyncio.run(update_topics())
