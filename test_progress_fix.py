#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π SQLite –±–∞–∑–æ–π
"""
import asyncio
import sqlite3
import os
from datetime import datetime

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é SQLite –±–∞–∑—É –¥–ª—è —Ç–µ—Å—Ç–∞
def create_test_db():
    conn = sqlite3.connect('test_progress.db')
    cursor = conn.cursor()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY,
            telegram_id INTEGER UNIQUE,
            username TEXT,
            total_points INTEGER DEFAULT 0,
            current_topic_id INTEGER,
            created_at TEXT,
            last_activity TEXT,
            streak INTEGER DEFAULT 0
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS topics (
            id INTEGER PRIMARY KEY,
            title TEXT NOT NULL,
            description TEXT,
            category TEXT,
            learning_time TEXT,
            difficulty TEXT,
            priority INTEGER DEFAULT 0
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS completed_topics (
            id INTEGER PRIMARY KEY,
            user_id INTEGER,
            topic_id INTEGER,
            completed_at TEXT,
            points_earned INTEGER DEFAULT 10,
            FOREIGN KEY (user_id) REFERENCES users (id),
            FOREIGN KEY (topic_id) REFERENCES topics (id)
        )
    ''')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute('''
        INSERT OR REPLACE INTO users 
        (telegram_id, username, total_points, created_at, last_activity, streak)
        VALUES (12345, 'test_user', 150, ?, ?, 3)
    ''', (datetime.now().isoformat(), datetime.now().isoformat()))
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–º—ã
    topics_data = [
        (1, 'Python –û—Å–Ω–æ–≤—ã', '–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python', 'general', '30 –º–∏–Ω', 'easy', 1),
        (2, '1–°:–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ', '–û—Å–Ω–æ–≤—ã 1–°', '1c', '45 –º–∏–Ω', 'medium', 2),
        (3, '–ê–ª–≥–æ—Ä–∏—Ç–º—ã', '–°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö', 'general', '60 –º–∏–Ω', 'hard', 3)
    ]
    
    cursor.executemany('''
        INSERT OR REPLACE INTO topics 
        (id, title, description, category, learning_time, difficulty, priority)
        VALUES (?, ?, ?, ?, ?, ?, ?)
    ''', topics_data)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–µ–º—ã
    completed_data = [
        (1, 1, datetime.now().isoformat(), 50),
        (1, 2, datetime.now().isoformat(), 100)
    ]
    
    cursor.executemany('''
        INSERT OR REPLACE INTO completed_topics 
        (user_id, topic_id, completed_at, points_earned)
        VALUES (?, ?, ?, ?)
    ''', completed_data)
    
    conn.commit()
    conn.close()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")

async def test_sqlite_methods():
    """–¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ —Å SQLite"""
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É get_user_stats
    conn = sqlite3.connect('test_progress.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute('SELECT * FROM users WHERE telegram_id = ?', (12345,))
    user = cursor.fetchone()
    
    if user:
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–µ–º—ã
        cursor.execute('SELECT COUNT(*) FROM completed_topics WHERE user_id = ?', (user[0],))
        completed_count = cursor.fetchone()[0]
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–Ω–∏ –æ–±—É—á–µ–Ω–∏—è
        created_at = datetime.fromisoformat(user[5])
        learning_days = (datetime.now() - created_at).days + 1
        
        stats = {
            'total_points': user[3],
            'completed_topics': completed_count,
            'learning_days': learning_days,
            'streak': user[7]
        }
        
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {stats}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–µ–º—ã
        cursor.execute('''
            SELECT ct.topic_id, t.title, ct.completed_at, ct.points_earned
            FROM completed_topics ct
            JOIN topics t ON ct.topic_id = t.id
            WHERE ct.user_id = ?
        ''', (user[0],))
        
        completed_topics = []
        for row in cursor.fetchall():
            completed_topics.append({
                'id': row[0],
                'title': row[1], 
                'completed_at': row[2],
                'points_earned': row[3]
            })
            
        print(f"üìö –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —Ç–µ–º—ã: {completed_topics}")
        
    conn.close()
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
    if os.path.exists('test_progress.db'):
        os.remove('test_progress.db')
    
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ - –º–µ—Ç–æ–¥—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")

if __name__ == '__main__':
    create_test_db()
    asyncio.run(test_sqlite_methods())
