import os
import logging
from dotenv import load_dotenv
from bot import AILearningBot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()  # –í—Ä–µ–º–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)

logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º .env, –∑–∞—Ç–µ–º .env.local (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É local)
load_dotenv()
if os.path.exists('.env.local'):
    load_dotenv('.env.local', override=True)
    logger.info("üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.local")

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
os.makedirs('logs', exist_ok=True)
file_handler = logging.FileHandler('logs/bot.log', encoding='utf-8')
file_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
logging.getLogger().addHandler(file_handler)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ AI Learning Bot...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
    if not telegram_token or telegram_token == 'YOUR_TELEGRAM_BOT_TOKEN':
        logger.error("‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TELEGRAM_BOT_TOKEN!")
        logger.error("–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç—É–¥–∞:")
        logger.error("TELEGRAM_BOT_TOKEN=your_bot_token_here")
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–æ–Ω —Å–∞–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã)
        bot = AILearningBot()
        bot.run()
        
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    main()
