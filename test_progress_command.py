#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SQLAlchemy 2.0
"""
import asyncio
import logging
import os
from unittest.mock import AsyncMock, MagicMock
from telegram import Update, User as TelegramUser
from telegram.ext import ContextTypes

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç—å –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
import sys
sys.path.append(os.getcwd())

from bot import AILearningBot

# –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏
logging.basicConfig(level=logging.ERROR)

async def test_progress_command():
    """–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /progress —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /progress –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è SQLAlchemy...")
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = AILearningBot()
    
    # –ú–æ–∫–∞–µ–º –º–µ—Ç–æ–¥—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –æ–Ω–∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    bot.db.get_user_stats = AsyncMock(return_value={
        'total_points': 250,
        'completed_topics': 3,
        'learning_days': 5,
        'streak': 2
    })
    
    bot.db.get_completed_topics = AsyncMock(return_value=[
        {'id': 1, 'title': 'Python –û—Å–Ω–æ–≤—ã', 'completed_at': '2025-08-10', 'points_earned': 100},
        {'id': 2, 'title': '–ê–ª–≥–æ—Ä–∏—Ç–º—ã', 'completed_at': '2025-08-09', 'points_earned': 150}
    ])
    
    # –°–æ–∑–¥–∞–µ–º mock update –∏ context
    update = MagicMock(spec=Update)
    update.effective_user = MagicMock(spec=TelegramUser)
    update.effective_user.id = 12345
    update.effective_user.first_name = "TestUser"
    update.message = MagicMock()
    update.message.reply_text = AsyncMock()
    
    context = MagicMock(spec=ContextTypes.DEFAULT_TYPE)
    
    try:
        # –í—ã–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        await bot.show_progress(update, context)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã
        bot.db.get_user_stats.assert_called_once_with(12345)
        bot.db.get_completed_topics.assert_called_once_with(12345)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        update.message.reply_text.assert_called_once()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        sent_message = update.message.reply_text.call_args[0][0]
        
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ /progress –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìä –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        print("-" * 50)
        print(sent_message)
        print("-" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        assert "üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è" in sent_message
        assert "250 –±–∞–ª–ª–æ–≤" in sent_message
        assert "3 —Ç–µ–º—ã" in sent_message
        assert "5 –¥–Ω–µ–π" in sent_message
        assert "Python –û—Å–Ω–æ–≤—ã" in sent_message
        
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ - –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        raise

if __name__ == '__main__':
    asyncio.run(test_progress_command())
