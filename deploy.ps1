# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è AI Learning Bot –¥–ª—è Windows PowerShell
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
# .\deploy.ps1 [development|production|monitoring]

param(
    [string]$Mode = "production"
)

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
function Write-Info($message) {
    Write-Host "[INFO] $message" -ForegroundColor Blue
}

function Write-Success($message) {
    Write-Host "[SUCCESS] $message" -ForegroundColor Green
}

function Write-Warning($message) {
    Write-Host "[WARNING] $message" -ForegroundColor Yellow
}

function Write-Error($message) {
    Write-Host "[ERROR] $message" -ForegroundColor Red
}

Write-Info "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI Learning Bot –≤ —Ä–µ–∂–∏–º–µ: $Mode"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if (!(Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop"
    exit 1
}

if (!(Get-Command docker-compose -ErrorAction SilentlyContinue)) {
    Write-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
switch ($Mode) {
    "development" {
        $ComposeFile = "docker-compose.yml"
        $EnvFile = ".env.local"
    }
    "production" {
        $ComposeFile = "docker-compose.prod.yml" 
        $EnvFile = ".env.prod"
    }
    "monitoring" {
        $ComposeFile = "docker-compose.prod.yml"
        $EnvFile = ".env.prod"
        $Profiles = "--profile monitoring"
    }
    default {
        Write-Error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $Mode. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: development, production, monitoring"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
if (!(Test-Path $ComposeFile)) {
    Write-Error "–§–∞–π–ª $ComposeFile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
}

if (!(Test-Path $EnvFile)) {
    Write-Warning "–§–∞–π–ª $EnvFile –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    
    if (($Mode -eq "production") -or ($Mode -eq "monitoring")) {
        if (Test-Path ".env.prod.example") {
            Copy-Item ".env.prod.example" $EnvFile
            Write-Info "–§–∞–π–ª $EnvFile —Å–æ–∑–¥–∞–Ω –∏–∑ .env.prod.example"
            Write-Warning "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ $EnvFile –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ!"
            Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞"
        } else {
            Write-Error "–§–∞–π–ª .env.prod.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
        }
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
Write-Info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

if ((Get-Content $EnvFile -Raw) -match "your_telegram_bot_token_here|your_grok_api_key_here") {
    Write-Error "–í —Ñ–∞–π–ª–µ $EnvFile –µ—Å—Ç—å –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ!"
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Info "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
$dirs = @("logs", "config", "ssl", "nginx/logs", "monitoring/grafana/provisioning")
foreach ($dir in $dirs) {
    if (!(Test-Path $dir)) {
        New-Item -Path $dir -ItemType Directory -Force | Out-Null
    }
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Info "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
& docker-compose -f $ComposeFile down --remove-orphans 2>$null

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
Write-Info "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
& docker-compose -f $ComposeFile build --no-cache

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Info "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."

if ($Mode -eq "monitoring") {
    Write-Info "–ó–∞–ø—É—Å–∫ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    & docker-compose -f $ComposeFile --env-file $EnvFile --profile monitoring up -d
} else {
    & docker-compose -f $ComposeFile --env-file $EnvFile up -d
}

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
Write-Info "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
Start-Sleep -Seconds 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
Write-Info "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
& docker-compose -f $ComposeFile ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
Write-Info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
Start-Sleep -Seconds 15

try {
    & docker-compose -f $ComposeFile exec -T bot python health_check.py
    Write-Success "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
} catch {
    Write-Warning "‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é —Å–∏—Å—Ç–µ–º—ã"
}

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
Write-Success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
Write-Host ""
Write-Info "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
Write-Host "  –õ–æ–≥–∏ –±–æ—Ç–∞:           docker-compose -f $ComposeFile logs -f bot"
Write-Host "  –õ–æ–≥–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:   docker-compose -f $ComposeFile logs -f scheduler"  
Write-Host "  –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:     docker-compose -f $ComposeFile ps"
Write-Host "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:           docker-compose -f $ComposeFile down"
Write-Host "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:          docker-compose -f $ComposeFile restart"

if ($Mode -eq "monitoring") {
    Write-Host ""
    Write-Info "üîó –°—Å—ã–ª–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    Write-Host "  Grafana:    http://localhost:3000 (admin/admin123)"
    Write-Host "  Prometheus: http://localhost:9090"
}

Write-Host ""
Write-Info "üìù –õ–æ–≥–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: .\logs\"
Write-Info "‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $EnvFile"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
$status = & docker-compose -f $ComposeFile ps
if ($status -match "Up") {
    Write-Success "üöÄ AI Learning Bot —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
} else {
    Write-Error "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f $ComposeFile logs"
    exit 1
}
