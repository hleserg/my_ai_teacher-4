version: '3.8'

services:
  # База данных PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ai_learning
      POSTGRES_USER: ai_bot
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_bot -d ai_learning"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Telegram бот
  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      # Telegram Bot Token - ОБЯЗАТЕЛЬНО ЗАМЕНИТЕ НА СВОЙ!
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-YOUR_TELEGRAM_BOT_TOKEN}
      
      # Grok API Key - уже установлен в коде, но можете переопределить
      GROK_API_KEY: ${GROK_API_KEY:-xai-6Kit0at2dCaQ8W4Z464Fe1lU6ZNyfzYVG1CbLywbHWjy25pmpmAgQelR9wZronOG8k4LndXmdAJJqcTe}
      
      # URL базы данных
      DATABASE_URL: postgresql+asyncpg://ai_bot:password@db:5432/ai_learning
      
      # Настройки окружения
      PYTHONUNBUFFERED: 1
      TZ: Europe/Moscow
    
    depends_on:
      db:
        condition: service_healthy
    
    volumes:
      - ./logs:/app/logs
    
    restart: unless-stopped
    
    # Проверка здоровья бота
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import requests; requests.get(\"https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe\")'"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Планировщик задач (обновление тем)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: python scheduler.py
    environment:
      DATABASE_URL: postgresql+asyncpg://ai_bot:password@db:5432/ai_learning
      GROK_API_KEY: ${GROK_API_KEY:-xai-6Kit0at2dCaQ8W4Z464Fe1lU6ZNyfzYVG1CbLywbHWjy25pmpmAgQelR9wZronOG8k4LndXmdAJJqcTe}
      PYTHONUNBUFFERED: 1
    
    depends_on:
      db:
        condition: service_healthy
    
    volumes:
      - ./logs:/app/logs
    
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: ai_learning_network
