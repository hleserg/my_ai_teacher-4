# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AI Learning Bot
param(
    [Parameter(Position=0)]
    [string]$Command
)

Write-Host "ü§ñ AI Learning Bot - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è" -ForegroundColor Cyan
Write-Host "==========================================" -ForegroundColor Cyan

switch ($Command) {
    "start" {
        Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green
        docker-compose up -d
    }
    "stop" {
        Write-Host "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
        docker-compose down
    }
    "restart" {
        Write-Host "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..." -ForegroundColor Blue
        docker-compose restart bot
    }
    "logs" {
        Write-Host "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –±–æ—Ç–∞..." -ForegroundColor Magenta
        docker-compose logs -f bot
    }
    "logs-all" {
        Write-Host "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –ª–æ–≥–æ–≤..." -ForegroundColor Magenta
        docker-compose logs -f
    }
    "status" {
        Write-Host "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Cyan
        docker-compose ps
    }
    "health" {
        Write-Host "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..." -ForegroundColor Green
        python health_check.py
    }
    "update" {
        Write-Host "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞..." -ForegroundColor Blue
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
    }
    "clean" {
        Write-Host "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–£–î–ê–õ–Ø–ï–¢ –í–°–ï –î–ê–ù–ù–´–ï!)..." -ForegroundColor Red
        $confirmation = Read-Host "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N)"
        if ($confirmation -eq 'y' -or $confirmation -eq 'Y') {
            docker-compose down -v
            docker system prune -f
        } else {
            Write-Host "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞" -ForegroundColor Yellow
        }
    }
    "setup" {
        Write-Host "‚öôÔ∏è –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..." -ForegroundColor Green
        if (-not (Test-Path ".env")) {
            Copy-Item ".env.example" -Destination ".env"
            Write-Host "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª" -ForegroundColor Green
            Write-Host "‚ö†Ô∏è  –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ!" -ForegroundColor Red
        } else {
            Write-Host "‚ö†Ô∏è  .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
        }
    }
    default {
        Write-Host "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor White
        Write-Host ""
        Write-Host "üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Green
        Write-Host "  manage.ps1 setup    - –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
        Write-Host "  manage.ps1 start    - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        Write-Host "  manage.ps1 stop     - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        Write-Host "  manage.ps1 restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"
        Write-Host ""
        Write-Host "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:" -ForegroundColor Cyan
        Write-Host "  manage.ps1 status   - –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
        Write-Host "  manage.ps1 logs     - –õ–æ–≥–∏ –±–æ—Ç–∞"
        Write-Host "  manage.ps1 logs-all - –í—Å–µ –ª–æ–≥–∏"
        Write-Host "  manage.ps1 health   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è"
        Write-Host ""
        Write-Host "üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:" -ForegroundColor Magenta
        Write-Host "  manage.ps1 update   - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞"
        Write-Host "  manage.ps1 clean    - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞"
        Write-Host ""
        Write-Host "üìö –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:" -ForegroundColor Yellow
        Write-Host "  1. manage.ps1 setup"
        Write-Host "  2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª"
        Write-Host "  3. manage.ps1 start"
        Write-Host "  4. manage.ps1 logs"
    }
}
