#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–µ–º—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

import asyncio
import os
from database import Database

async def check_topic():
    os.environ['DATABASE_URL'] = 'sqlite+aiosqlite:///local_test.db'
    
    db = Database()
    await db.init_db()
    
    # –ù–∞–π–¥–µ–º —Ç–µ–º—É –ø—Ä–æ –¥–µ—Ç–µ–∫—Ü–∏—é –∞–Ω–æ–º–∞–ª–∏–π
    async with db.async_session() as session:
        from sqlalchemy import select
        from database import Topic, LearningMaterial
        
        result = await session.execute(
            select(Topic).where(Topic.title.like('%–µ—Ç–µ–∫—Ü–∏—è –∞–Ω–æ–º–∞–ª–∏–π%'))
        )
        topic = result.scalar_one_or_none()
        
        if topic:
            print(f'üìñ –ù–∞–π–¥–µ–Ω–∞ —Ç–µ–º–∞: {topic.title}')
            print(f'üìù –û–ø–∏—Å–∞–Ω–∏–µ: {topic.description[:100]}...')
            print(f'‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {topic.updated_at}')
            
            # –ü—Ä–æ–≤–µ—Ä–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã
            materials_result = await session.execute(
                select(LearningMaterial).where(LearningMaterial.topic_id == topic.id)
            )
            materials = materials_result.scalars().all()
            
            print(f'ÔøΩ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: {len(materials)} —à—Ç.')
            
            if materials:
                print('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∞–π–¥–µ–Ω—ã:')
                for material in materials:
                    print(f'  - {material.material_type}: {material.title}')
                    if material.content and '–≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è' in material.content:
                        print(f'    ‚ùå Placeholder: {material.content[:100]}...')
                    elif material.content:
                        print(f'    ‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç: {len(material.content)} —Å–∏–º–≤–æ–ª–æ–≤')
            else:
                print('‚ùå –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
                
        else:
            print('‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')

if __name__ == '__main__':
    asyncio.run(check_topic())
