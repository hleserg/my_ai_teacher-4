#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –≤ handle_question
"""
import os
import asyncio

os.environ['DATABASE_URL'] = 'sqlite+aiosqlite:///local_test.db'

def test_method_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        from bot import AILearningBot
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –±–æ—Ç–∞ —É—Å–ø–µ—à–µ–Ω")
        
        bot = AILearningBot()
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        methods_to_check = [
            '_send_long_message',
            '_send_long_text_message',
            'handle_question',
            'handle_question_button'
        ]
        
        print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:")
        for method_name in methods_to_check:
            if hasattr(bot, method_name) and callable(getattr(bot, method_name)):
                print(f"  ‚úÖ {method_name} - –Ω–∞–π–¥–µ–Ω –∏ –≤—ã–∑—ã–≤–∞–µ–º—ã–π")
            else:
                print(f"  ‚ùå {method_name} - –ù–ï –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º—ã–π")
        
        print("\nüß™ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –º–µ—Ç–æ–¥–æ–≤:")
        
        if hasattr(bot, '_send_long_message'):
            import inspect
            sig = inspect.signature(bot._send_long_message)
            print(f"  üìã _send_long_message{sig}")
            
        if hasattr(bot, '_send_long_text_message'):
            import inspect
            sig = inspect.signature(bot._send_long_text_message)
            print(f"  üìã _send_long_text_message{sig}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_method_availability()
    if success:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ú–µ—Ç–æ–¥—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã.")
    else:
        print("\nüí• –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –º–µ—Ç–æ–¥–∞–º–∏.")
